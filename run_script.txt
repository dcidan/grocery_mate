# GroceryMate Development Runner
# This script starts both backend and frontend in separate windows

Write-Host "ü•ó Starting GroceryMate Development Servers" -ForegroundColor Green
Write-Host ""

# Check if Docker is running
docker ps > $null 2>&1
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Docker Desktop is not running!" -ForegroundColor Red
    Write-Host "Please start Docker Desktop first." -ForegroundColor Red
    exit 1
}

# Check if database container is running
$dbRunning = docker ps --filter "name=grocery_postgres" --format "{{.Names}}"
if (-not $dbRunning) {
    Write-Host "Starting PostgreSQL container..." -ForegroundColor Yellow
    docker-compose up -d
    Start-Sleep -Seconds 3
}

Write-Host "‚úÖ Database is running" -ForegroundColor Green
Write-Host ""

# Start Backend in new PowerShell window
Write-Host "Starting Backend Server..." -ForegroundColor Cyan
Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd backend; .\venv\Scripts\Activate.ps1; Write-Host 'üöÄ Backend Server Starting...' -ForegroundColor Green; uvicorn app.main:app --reload --host 0.0.0.0 --port 8000"

Start-Sleep -Seconds 2

# Start Frontend in new PowerShell window
Write-Host "Starting Frontend Server..." -ForegroundColor Cyan
Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd frontend; Write-Host 'üé® Frontend Server Starting...' -ForegroundColor Green; npm run dev"

Write-Host ""
Write-Host "================================" -ForegroundColor Green
Write-Host "‚úÖ Development servers started!" -ForegroundColor Green
Write-Host "================================" -ForegroundColor Green
Write-Host ""
Write-Host "Access points:" -ForegroundColor Yellow
Write-Host "  üåê Frontend: http://localhost:5173" -ForegroundColor White
Write-Host "  üì° Backend API: http://localhost:8000" -ForegroundColor White
Write-Host "  üìö API Docs: http://localhost:8000/docs" -ForegroundColor White
Write-Host ""
Write-Host "Press Ctrl+C in each terminal window to stop servers" -ForegroundColor Gray
